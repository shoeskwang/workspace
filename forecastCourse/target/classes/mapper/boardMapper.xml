<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<!-- 01. 게시글 전체 목록 조회 -->
    <select id="listAll" resultType="com.kwang.forecastCourse.model.dto.BoardVO">
    <include refid="pagingHeader"></include>
        SELECT 
            @rownum,
            bno,
            gno, 
            title, 
            writer,
            b.regdate, 
            viewcnt,
            <!-- ** 댓글숫자표시 -->
            (SELECT COUNT(*) FROM tbl_board_reply WHERE bno=b.bno) AS recnt 
        FROM 
            tbl_board b, tbl_member m
        <!-- WHERE절을 include 태그로 삽입 -->
    	<include refid="search"></include>
        ORDER BY bno DESC, b.regdate DESC 
    <include refid="pagingFooter"></include>
    </select>
    
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
	    SELECT * FROM (
	        SELECT @rownum:=@rownum+1 AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
	        ) A, (SELECT @rownum:=0)T
	    ) B WHERE B.rn BETWEEN #{start} AND #{end}
	</sql>
    
    <!-- 01_02. 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
	    SELECT COUNT(*) FROM tbl_board b, tbl_member m
	    <!-- WHERE절을 include 태그로 삽입 -->
	    <include refid="search"></include>
	</select>
	
	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
	<sql id="search">
	    <choose>
	        <!-- 검색옵션이 전체 검색일 경우 -->
	        <when test="searchOption == 'all'">
	            WHERE b.writer = m.id
	            AND    
	            (writer like CONCAT('%',#{keyword},'%')
	            OR content like CONCAT('%',#{keyword},'%')
	            OR title like CONCAT('%',#{keyword},'%'))
	        </when>
	        <!-- 전체 검색이 아닐 경우 -->
	        <otherwise>
	            WHERE b.writer = m.id 
	            AND ${searchOption} like CONCAT('%',#{keyword},'%')
	        </otherwise>
	    </choose>
	</sql>

	
	
    <!-- Mysql에서는 insert문 subquery로 같은 테이블 지정 불가해서 Insert Select 문 사용 -->
	<!-- 02. 게시글 작성 -->
    <insert id="insert">
        INSERT INTO tbl_board (
          bno, 
          title, 
          content, 
          writer
        ) SELECT 
          IFNULL(MAX(bno)+1, 1),
          #{title},
          #{content},
          #{writer}
         FROM tbl_board
    </insert>
	
	
	<!--03. 게시글 상세보기 조회 -->
    <select id="view" resultType="com.kwang.forecastCourse.model.dto.BoardVO">
        SELECT * FROM tbl_board 
        WHERE bno = #{bno}
    </select>
	
	
	<!-- 04. 게시글 조회수 증가처리 -->
    <update id="increaseViewcnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 
        WHERE bno = #{bno}
    </update>
	
	<!-- 05. 게시글 수정처리 -->
    <update id="updateArticle">
        UPDATE tbl_board SET
            title = #{title},
            content = #{content}
        WHERE bno = #{bno}
    </update>
	
	<!-- 06. 게시글 삭제처리 -->
    <delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>
	
	
</mapper>
